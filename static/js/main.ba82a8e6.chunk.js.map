{"version":3,"sources":["components/Header.js","components/SessionLength.js","components/TimerLengthControl.js","components/Timer.js","App.js","index.js","images/header.png"],"names":["Header","className","src","headerImg","alt","SessionLength","props","id","timerMode","clockify","onClick","controlTimer","btnState","resetTimer","TimerLengthControl","titleId","title","minId","value","setLength","lengthId","length","addId","Timer","state","breakLength","sessionLength","timerOn","timer","intervalID","undefined","bind","beginCountdown","switchMode","decreaseTimer","setBreakLength","setSessionLength","prevProps","prevState","this","setState","alarm","play","clear","accurateInterval","time","mode","pause","currentTime","e","currentLength","currentTarget","minutes","Math","floor","seconds","preload","ref","audio","Component","App","href","target","rel","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ba82a8e6.chunk.js","sourcesContent":["import React from 'react';\nimport headerImg from '../images/header.png';\n\nfunction Header() {\n  return (\n    <div className='Header'>\n      <img src={headerImg} alt='header' />\n      <h2>the time management system for procrascinators</h2>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction SessionLength(props) {\n  return (\n    <div className='SessionLength'>\n      <p id='timer-label' className='SessionLength__label'>\n        {props.timerMode}\n      </p>\n      <span id='time-left' className='SessionLength__time'>\n        {props.clockify()}\n      </span>\n      <div className='SessionLength__controls'>\n        <button\n          id='start_stop'\n          className='SessionLength__controls__btn SessionLength__controls__btn--start-stop'\n          onClick={props.controlTimer}\n        >\n          {props.btnState}\n        </button>\n        <button\n          id='reset'\n          className='SessionLength__controls__btn SessionLength__controls__btn--reset'\n          onClick={props.resetTimer}\n        >\n          <i className='fas fa-redo' />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default SessionLength;\n","import React from 'react';\n\nfunction TimerLengthControl(props) {\n  return (\n    <div className='TimerLengthControl'>\n      <p id={props.titleId} className='TimerLengthControl__title'>\n        {props.title}\n      </p>\n      <div className='TimerLengthControl__controls'>\n        <button\n          id={props.minId}\n          className='TimerLengthControl__controls__btn TimerLengthControl__controls__btn--left'\n          value='-'\n          onClick={props.setLength}\n        >\n          <i className='fas fa-minus' />\n        </button>\n        <div className=\"TimerLengthControl__controls__length\">\n          <span id={props.lengthId}>{props.length}</span>\n        </div>\n        <button\n          id={props.addId}\n          className='TimerLengthControl__controls__btn TimerLengthControl__controls__btn--right'\n          value='+'\n          onClick={props.setLength}\n        >\n          <i className='fas fa-plus' />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TimerLengthControl;\n","import React, { Component } from 'react';\nimport SessionLength from './SessionLength';\nimport TimerLengthControl from './TimerLengthControl';\nimport accurateInterval from 'accurate-interval';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      btnState: 'Start',\n      timerOn: false,\n      timerMode: 'Session',\n      timer: 1500,\n      intervalID: undefined,\n    };\n    this.controlTimer = this.controlTimer.bind(this);\n    this.beginCountdown = this.beginCountdown.bind(this);\n    this.switchMode = this.switchMode.bind(this);\n    this.decreaseTimer = this.decreaseTimer.bind(this);\n    this.setBreakLength = this.setBreakLength.bind(this);\n    this.setSessionLength = this.setSessionLength.bind(this);\n    this.clockify = this.clockify.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Change button label based on timer being on or off\n    if (prevState.timerOn !== this.state.timerOn) {\n      if (this.state.timerOn) {\n        this.setState({\n          btnState: 'Stop',\n        });\n      } else {\n        this.setState({\n          btnState: 'Start',\n        });\n      }\n    }\n\n    // Buzz when timer hits zero\n    if (this.state.timer === 0) {\n      this.alarm.play();\n    }\n\n    // Alternate timer mode whenever break/session hits zero\n    if (this.state.timer < 0) {\n      if (this.state.timerMode === 'Session') {\n        this.state.intervalID && this.state.intervalID.clear();\n        this.beginCountdown();\n        this.switchMode(this.state.breakLength, 'Break');\n      } else if (this.state.timerMode === 'Break') {\n        this.state.intervalID && this.state.intervalID.clear();\n        this.beginCountdown();\n        this.switchMode(this.state.sessionLength, 'Session');\n      }\n    }\n\n    // Change timer length based on mode when timer is off\n    if (!this.state.timerOn) {\n      if (prevState.breakLength !== this.state.breakLength) {\n        if (this.state.timerMode === 'Break') {\n          this.setState({ timer: this.state.breakLength * 60 });\n        }\n      } else if (prevState.sessionLength !== this.state.sessionLength) {\n        if (this.state.timerMode === 'Session') {\n          this.setState({ timer: this.state.sessionLength * 60 });\n        }\n      }\n    }\n  }\n\n  controlTimer() {\n    if (this.state.timerOn) {\n      this.state.intervalID && this.state.intervalID.clear(); // Stop timer\n      this.setState({ timerOn: false });\n    } else {\n      this.beginCountdown(); // Start timer\n      this.setState({ timerOn: true });\n    }\n  }\n\n  // Use Accurate-Timer to call decreaseTimer every one second and assign it to state\n  beginCountdown() {\n    this.setState({\n      intervalID: accurateInterval(this.decreaseTimer, 1000),\n    });\n  }\n\n  switchMode(time, mode) {\n    this.setState({\n      timer: time * 60,\n      timerMode: mode,\n    });\n  }\n\n  // Decrease timer (sec) by one\n  decreaseTimer() {\n    this.setState((prevState) => ({ timer: prevState.timer - 1 }));\n  }\n\n  resetTimer() {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      btnState: 'Start',\n      timerOn: false,\n      timerMode: 'Session',\n      timer: 1500,\n      intervalID: undefined,\n    });\n    this.state.intervalID && this.state.intervalID.clear();\n    this.alarm.pause();\n    this.alarm.currentTime = 0;\n  }\n\n  setBreakLength(e) {\n    if (this.state.timerOn) return; // Disable if timer is on\n    const currentLength = this.state.breakLength;\n    const value = e.currentTarget.value;\n\n    if (value === '-' && currentLength !== 1) {\n      this.setState((prevState) => ({\n        breakLength: prevState.breakLength - 1,\n      }));\n    } else if (value === '+' && currentLength !== 60) {\n      this.setState((prevState) => ({\n        breakLength: prevState.breakLength + 1,\n      }));\n    }\n  }\n\n  setSessionLength(e) {\n    if (this.state.timerOn) return; // Disable if timer is on\n    const currentLength = this.state.sessionLength;\n    const value = e.currentTarget.value;\n\n    if (value === '-' && currentLength !== 1) {\n      this.setState((prevState) => ({\n        sessionLength: prevState.sessionLength - 1,\n      }));\n    } else if (value === '+' && currentLength !== 60) {\n      this.setState((prevState) => ({\n        sessionLength: prevState.sessionLength + 1,\n      }));\n    }\n  }\n\n  // Turn seconds into analog time\n  clockify() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return minutes + ':' + seconds;\n  }\n\n  render() {\n    return (\n      <div className='Timer'>\n        <SessionLength\n          timerMode={this.state.timerMode}\n          clockify={this.clockify}\n          btnState={this.state.btnState}\n          controlTimer={this.controlTimer}\n          resetTimer={this.resetTimer}\n        />\n        <TimerLengthControl\n          titleId='break-label'\n          minId='break-decrement'\n          addId='break-increment'\n          lengthId='break-length'\n          title='Break Length'\n          length={this.state.breakLength}\n          setLength={this.setBreakLength}\n        />\n        <TimerLengthControl\n          titleId='session-label'\n          minId='session-decrement'\n          addId='session-increment'\n          lengthId='session-length'\n          title='Session Length'\n          length={this.state.sessionLength}\n          setLength={this.setSessionLength}\n        />\n        <audio\n          id='beep'\n          preload='auto'\n          src='https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav'\n          ref={(audio) => {\n            this.alarm = audio;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport Header from './components/Header';\nimport Timer from './components/Timer';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <Timer />\n      <p className=\"footer\">\n        design and code by{' '}\n        <a\n          href='https://github.com/alishahwee'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Alisha Hwee\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/header.f87043b8.png\";"],"sourceRoot":""}